name: Build containers

on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: [eicroot]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Containerize
      run: |
        source /cvmfs/eic.opensciencegrid.org/packages/setup-env.sh
        cd environments/${{matrix.env}}
        spack containerize > Dockerfile
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: electronioncollider/spack-${{matrix.env}}
        tag-semver: |
          {{version}}
          {{major}}.{{minor}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      if: github.event_name != 'pull_request'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      continue-on-error: true
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: environments/${{matrix.env}}/Dockerfile
        push: ${{ steps.docker_login.outcome == 'success' && github.event_name != 'pull_request' }}
        tags: ${{steps.docker_meta.outputs.tags}}
        labels: ${{steps.docker_meta.outputs.labels}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{steps.docker_build.outputs.digest}}
